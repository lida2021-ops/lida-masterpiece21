<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width">
  <title> Favorite Books </title>
  <link rel="stylesheet" type="text/css" href="style.css">
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"     integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="   crossorigin="anonymous"></script>â€©
  <link href='https://fonts.googleapis.com/css?family=Sofia' rel='stylesheet'>
</head>

<body>

  <style>
    
   body {
 background-color:bisque;
 background-image: url("https://i.guim.co.uk/img/media/d305370075686a053b46f5c0e6384e32b3c00f97/0_50_5231_3138/master/5231.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=878208abf6d919b7ca9948a523d9ff4e");
 text-align: center;
 font-size: 18px;
 padding: 30px;
 font-family: "Sofia", sans-serif;

}

label { font-size: x-large;
color: rgb(136, 15, 136);

}


div.form-div {

  background-color: rgba(243, 135, 180, 0.623);
  border-radius: 20px;
  border: 3px solid rgba(155, 22, 148, 0.795);
  padding:30px;
  font-family: "Sofia", sans-serif;
  margin-bottom: 20px;
  margin-top: 20px;
  margin-left: 20px;
  text-align: inherit;
  color: rgba(155, 22, 148, 0.795);
  text-shadow: 2px 2px rgba(240, 123, 172, 0.589);
  font-size: large; 
  

} 


input[type=text], [type=color], [type=text], input[type=date] {


  width: 40vw;
  color: rgba(155, 22, 148, 0.795);
  font-size: large; 
  border-width: 0px;
  border-bottom: 1px dotted rgba(155, 22, 148, 0.795);
  background: rgba(243, 135, 180, 0.623);
  margin-top: 40px; 
  font-family: "Sofia", sans-serif;


      }

#funny_girl {
  height:100px;
  width: 50px;
  position: absolute;
  top: 80px;
  left: 10px;
      }


#books { 
    width: 70px;

}



input[type=button] {
  width: 70vw;
  box-shadow: 2px 2px palevioletred;
  background-color: rgba(240, 250, 102, 0.589);
  margin-bottom: 20px;
  border-radius: 50px;
  padding: 24px;
  box-sizing: border-box;
  border: 2px solid purple;
  border-bottom: 1px black;
  padding-bottom: 50px;

       
      }
  

select {
  width: 40vw;
  color: rgba(155, 22, 148, 0.795);
  font-size: large; 
  border-width: 0px;
  border-bottom: 1px dotted rgba(155, 22, 148, 0.795);
  background: rgba(243, 135, 180, 0.438);
  margin-top: 40px; 
  font-family: "Sofia", sans-serif;

      }



       
h1 {
 background-color: purple; text-align: center; color: azure; font-family: "Sofia", sans-serif;  transform: rotate3d(180deg);

    }

  </style>
  
  <h1> Favorite books <img id="books"></h1> 
  <h2> <sup>*</sup>Required </h2> 

    
    <form>
      <div class="form-div">
         <label for ="fname"> <b> Full name: </b> <sup>*</sup> </label> <br>  
        <input type="text" name= "fullname" id= "fullname" required
        onblur="handleFullnameChange()">   
      </div>

      <div class="form-div">
        <label for="title"> <b> Title: </b> <sup>*</sup>  </label><br> <input type="text" id = "title" required
        onblur="handleTitleChange()"><br><br> 
      </div>

      <div class="form-div">
        <label for ="author"> <b> Author: </b> <sup>*</sup> </label><br> <input type="text" id = "author" required
        onblur="handleAuthorChange()"><br> <br>
      </div>

      <div class="form-div">
        <label for ="color"> <b> Color: </b>  </label> <br> <input type="color" id = "color" onblur="handleColorChange()"><br> <br>
      </div>

      <div class="form-div"> 
        <label for ="cover"> <b> Cover type: </b></label><br> 
        <select onchange ="handleCoverMaterialChange()" id="cover">
          <option value="paperback">Paperback </option>
          <option value="harcover"> Hardcover </option>
          <option value="other"> Other </option>   
        </select> 

      </div> 

      <div class="form-div">
        <br> 
        <img id="funny_girl" src="https://i.pinimg.com/originals/84/0e/be/840ebe66f737a79a2b7963175e3f8e8b.png" alt="books"><label for= "Nmb"> Number of pages: </label><br> <input type ="number" id ="pages" name="text" onchange="handlePagesChange()"><br> <br> 
      </div>
      <div class="form-div">
        <label for = "price"> Price: </label><br>
        <input type = "number" id ="price" onchange="handlePriceChange()"><br> <br>
      </div>
      <div class="form-div">
        <label for ="cur">Currency: </label><br> 
        <input type ="text" id = "currency" onblur="handleCurrencyChange()" ><br> <br>
      </div>
      <div class="form-div">
        <label for ="lang" > Language: </label><br> 
        <input type="radio" id="English" name="language" onchange="handleLangChange(event)"> 
        <label for ="lang"> English </label><br>
        <input type="radio" id="Russian" name="language" onchange="handleLangChange(event)"> 
        <label for ="lang"> Russian </label><br> 
        <input type="radio" id="French" name="language"onchange="handleLangChange(event)"> 
        <label for ="lang"> French </label><br> 
        <input type="radio" id="Armenian" name="language" onchange="handleLangChange(event)"> 
        <label for ="lang"> Armenian </label><br>
        <input type = "radio" id="otherl" name="language" onchange="handleLangChange(event)"> 
        <label for ="other"> Other:</label> 
        <input type="text" id = "otherlang" onblur="handleOtherlangChange()" ><br> <br>         
      </div>
      
      <div class="form-div"> 
        <label for = "edit"> Edition: </label><br> <input type = "text" id = "edit" onblur="handleEditChange()"><br><br> 
      </div>
      <div class="form-div">
        <label for ="pub"> Publisher: </label><br> <input type = "text" id = "publisher" onblur="handlePublisherChange()"><br><br>
      </div>
      <div class="form-div">
        <label for ="date"> Publishing Date: </label><br> <input type="date" id="date" name="publishing" onblur="handleDateChange()"> <br><br>
      </div>
      <div class="form-div">
        <label for ="Genre"> Genre: </label><br> <input type = "text" id ="genre" required onblur="handleGenreChange()"><br><br>
      </div>
                 
     <button id = "mainbutton" onclick="showTheBookData(event)" style ="font-size: 20px;
    border: none; border-radius: 10px 10px; padding: 15px; color: #6600cc;
    background-color: #ffb6c1;"> SUBMIT </button>
    <text><a href ="/" style="font-size: 20px;
    border: none; border-radius: 10px 10px; padding: 15px; color: #ffb6c1;
    background-color: #6600cc; text-decoration: none;"> Return </a></text></text>
        
        </div> 
    </form>  
    <script>
      
      var requiredFields = [
 "fullname", "title", "author", "genre", 
] 
var myBook = {
  "owner" : "Lida Asilyan",
  "project" : "Book",
  "fullname" : "",
  "title" : "",
  "author" : "",
  "color" : "",
  "coverMaterial" : "",
  "pages" : "",
  "price" : "",
  "currency": "",
  "publisher": "", 
  "edit": "",
  "date" : "",
  "genre": ""


}

function handleFullnameChange() {
  myBook.fullname = document.getElementById("fullname").value; 
}

function handleTitleChange() {
  myBook.title = document.getElementById("title").value; 
}
function handleAuthorChange() {
  myBook.author = document.getElementById("author")
  .value; 
}

function handleColorChange() {
  myBook.color = document.getElementById("color").value;
}

function handleCoverMaterialChange() {
  myBook.coverMaterial = document.getElementById("cover").value;
}
function handlePagesChange() {
  myBook.pages = document.getElementById("pages").value;
}

function handlePriceChange() {
  myBook.price = document.getElementById("price").value;
}

function handleCurrencyChange() {
  myBook.currency = document.getElementById("currency").value;
}

function handleEditChange() {
  myBook.edit = document.getElementById("edit").value;
}

function handleDateChange() {
  myBook.date = document.getElementById("date").value;
}

function handlePublisherChange() {
  myBook.publisher = document.getElementById("publisher").value;
}

function handleGenreChange() {
  myBook.genre = document.getElementById("genre").value;
}


function handleLangChange(e) {
  myBook.language = e.target.id;
  if (myBook.language != "otherl") {
    myBook.otherlang = ""; document.getElementById("otherlang").style.display = "none";
  } else {document.getElementById("otherlang").style.display = "block";
  }
}

function handleCustomLangChange() {
  if (myBook.language == "other") {
    myBook.customlanguage = document.getElementById("otherlang").value;
  }
}

function validateFormData() {
  var isFormValid = true;
  var keys = Object.keys(myBook);
  keys.forEach(key => {
      if (requiredFields.indexOf(key) > -1 && myBook[key] == "") { console.log(key, " is a required field, please add a value") 
      if(document.getElementById(key)) {
        document.getElementById(key).style.backgroundColor = "red"; 
        isFormValid = false;
      }
    }   
  })
  return isFormValid;
}

function showTheBookData(e) {
  e.preventDefault();
  console.log("The current value is", myBook)
  
  $.ajax({
    type: 'POST',
    url: "https://cse120-2021-api-lida.herokuapp.com/data",
    data: myBook,
    cache: false,
    dataType : 'json',
    success: function (data) {
      console.log("success");
      document.location="/thankyou.ejs"; 
    },
    error: function (xhr) {
      console.error("Error in post", xhr);
    },
    complete: function () {
      console.log("Complete");  
    }
  });
}

function loadExistingData() {
  var existingData = [];
  $.ajax({
    type : "GET",
    url : "https://cse120-2021-api-lida.herokuapp.com/data",
    dataType : "json",
    success : function(data) {
      console.log("success", data);
      existingData = data;
      displayData(existingData.data);
    },
    error : function(data) {
        console.log("Error")
    }
  });
}

function displayData(existingData) {
  document.getElementById("existingData").innerHTML = "<ul>";
  for (var i = 0; i < existingData.length; i++) {
    currentBook = existingData[i];
    document.getElementById("existingData").innerHTML += "<li><i>" + currentBook.fullname + "</li> : <b>" + currentBook.title + "</b></li>";
  }
  document.getElementById("existingData").innerHTML += "</ul>"
}
    
function deleteData(id) {

    var r = confirm("Are you sure you want to delete the item with the following ID? " + id);
    if (r == true) {
      
    } else {
      return;
    }

    var tmp = {
        "id": id
    }

    $.ajax({
        type: 'POST',
        url: "https://cse120-2021-api-lida.herokuapp.com/data/delete",
        data: tmp,
        cache: false,
        dataType : 'json',
        success: function (data) {
            console.log("success");
            document.getElementById("div" + id).style.display = "none";
        },
        error: function (xhr) {
            console.error("Error in post", xhr);
        },
        complete: function () {
            console.log("Complete");  
        }
    });
}

function saveData() {
  var tmp = {
    "test": "Data"
  }

    $.ajax({
        type: 'POST',
        url: "https://cse120-2021-api-lida.herokuapp.com/data",
        data: tmp,
        cache: false,
        dataType : 'json',
        success: function (data) {
          console.log("success");
        },
        error: function (xhr) {
            console.error("Error in post", xhr);
        },
        complete: function () {
            console.log("Complete");  
        }
    });
}

function loadExistingData() {
    $.ajax({
        type : "GET",
        url : "https://cse120-2021-api-lida.herokuapp.com/data",
        dataType : "json",
        success : function(data) {
          console.log("success", data);
            displayData(data.data);
        },
        error : function(data) {
            console.log("Error")
        }
    });
}

function displayData(data) {
    document.getElementById("dataContainer").innerHTML = "";
    data.forEach(elem => {

    var item = document.createElement("div");
        item.id = "div" + elem["_id"];
        item.className = "item";
    if (Object.keys(elem).length == 1) {
    var span = document.createElement("span");
        span.innerHTML = "<i>Empty Element with autogenerated ID: </i>" + elem["_id"];
        item.appendChild(span);
        }
    Object.keys(elem).forEach(key => {
      if (key != "_id") {
      var span = document.createElement("span");

      var b = document.createElement("b");
          b.innerHTML = key + ": ";
          span.appendChild(b);
                
          span.className = "item";
      if (elem[key]) {
          span.innerHTML += elem[key];
      } else {
        
      var span1 = document.createElement("span");
          span1.className = "undefined";
          span1.innerHTML = "N/A";
          span.appendChild(span1)
                }
          item.appendChild(span);

      var br = document.createElement("br");
          item.appendChild(br);
            }
        })
      var button = document.createElement("button");
        button.innerHTML = "Delete";
        button.id = elem["_id"];
        button.addEventListener("click", function(e){
          deleteData(e.target.id);
        }, false);
        item.appendChild(button);
        document.getElementById("dataContainer").appendChild(item);
    })

}

    </script>  
  </body>
</html>